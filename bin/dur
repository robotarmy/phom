#!/usr/bin/env ruby
$stderr.puts "Dur! "
if ARGV.first.nil?
  $stderr.puts 'Dur!: needs file path followed by space and then mimetype followed by a space and then font-face name'
  exit
end
file = ARGV.first
unless File.exist? file
  $stderr.puts "Dur!: #{file} not found :("
  exit
end
file = ARGV.shift

if ARGV.first.nil?
  $stderr.puts 'Dur!: needs to know what is file mime type.'
  exit
end
mimetype = ARGV.shift

if ARGV.first.nil?
  $stderr.puts 'Dur!: needs to know font-face name for file'
  exit
end
fontface = ARGV.first

$stderr.puts "Dur!: processing #{file} ; #{mimetype} into font-face #{fontface}"

template = %%
@font-face {
  font-family: #{fontface};
  src: url(data:__MIMETYPE__;charset=utf8;base64,__DATA__);
}
%
  
data = File.read(file)

require 'base64'
encoded_data  = Base64.strict_encode64(data) # no line feeds if strict

2.times {
  $stdout.puts "" 
}
time = Time.now
$stdout.puts "/* __BEGIN__:#{time.to_i}"
$stdout.puts "\tfile : #{file}"
$stdout.puts "\tmimetype : #{mimetype}"
$stdout.puts "\tcreation-stamp : #{time.to_s}"
$stdout.puts "*/"
$stdout.puts template.gsub('__MIMETYPE__',mimetype).gsub('__DATA__',encoded_data)
$stdout.puts "/* #{time.to_i}:__END__ */"

